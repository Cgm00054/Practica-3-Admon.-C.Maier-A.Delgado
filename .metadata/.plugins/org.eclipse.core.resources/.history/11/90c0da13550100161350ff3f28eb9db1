package prueba;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

// bibliotecas añadidas
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

// vamos a ver si funciona el GitHub 
// cambios en el archivo main

/**
 *
 * @author toni
 */
public class Main {
	

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        ByteArrayInputStream bais=null;
       //read("cert.cer");
       
      // FileInputStream fis = new FileInputStream("cert.cer");
      
       
      // byte value[] = new byte[fis.available()];
       //  fis.read(value);
       // bais = new ByteArrayInputStream(value);

        //TODO: Obtener los datos del DNIe
        String NIF="";
        String nombre="";
        String ap1="";
        String ap2="";
        ObtenerDatos od = new ObtenerDatos();
        nombre=od.LeerNombre();
        ap1=od.LeerAp1();
        ap2=od.LeerAp2();
        NIF=od.LeerNIF();
        String password="123456";
       System.out.println("Nombre: "+nombre);
       System.out.println("Apellido 1: "+ap1);
       System.out.println("Apellido 2: "+ap2);
       System.out.println("NIF: "+NIF);
       String n1=""+nombre.charAt(0);
       String ap22=ap2.charAt(0)+"";
       String ap12="";
       for(int i=0;i<7;i++){
    	   ap12+=ap1.charAt(i);
       }
       String nom_usuario=n1+ap12+ap22;
       //System.out.println("USER:"+nom_usuario);
       String user_min=nom_usuario.toLowerCase();
       System.out.println("username:" +user_min);
       System.out.println("password:"+password);
       
       //TODO: Autenticarse en el servidor
        
    // crear un metodo
       
    }
    
    //public class URLWriter {

        public static void conexion(String[] args) throws Exception{
            String userAgent = "Mozilla/5.0 (X11; Linux x86_64; rv:26.0) Gecko/20100101 Firefox/26.0";
            String address = "http://localhost/form.php";
            String forSending = "Batman";
            String charset = "UTF-8";

            // El metodo encode() de URLEncoder se encarga de encodear la cadena que enviaremos
            // al servidor, sustituyendo espacios y caracteres especiales
            String stringToSend = URLEncoder.encode(forSending, charset);

            // 1. Creamos objeto URL
            URL URL = new URL(address);
            // 2. Obtenemos el objeto URLConnection llamando a openConnection() en URL
            URLConnection connection = URL.openConnection();
            // Establecemos algunas propiedas de envió, como es el User-Agent
            connection.addRequestProperty("User-Agent", null);

            // 3. Esto es importantisímo, es aqui donde establecemos la capacidad de envió.
            connection.setDoOutput(true);

            // 4. Abrimos una conexión al recurso para poder escribir/enviar datos al formulario
            // Nota que no se llama explícitamente a connect() porque llamados a getOutputStream()
            OutputStreamWriter out = new OutputStreamWriter(
                    connection.getOutputStream());
            out.write("nombre=" + stringToSend); // "nombre" es el campo del formulario web
            out.close();

            // Aquí leemos el resultado que nos devolvió el servidor, en efecto, lo que
            // respondió form.php y luego de enviar los datos
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(
                            connection.getInputStream()));
            String response;
            while((response = in.readLine()) != null)
                System.out.println(response);
            in.close();
        }
    //}

}
